#!/usr/bin/make -f

#export DH_VERBOSE=1
#export DEB_BUILD_MAINT_OPTIONS=hardening=+all,-pie

VARIANTS :=
VARIANTS += gcc-hfi
ifdef ENABLE_CUDA
VARIANTS += gcc-cuda-hfi
CUDA_HOME ?= /usr
endif
ifdef ENABLE_VERBS
VARIANTS += gcc
endif

PACKAGE_VERSION = $(shell parsechangelog | grep Version | sed 's/.*:\s*//;s/-.*//')
PACKAGE_NAME=openmpi-$(*)
PACKAGE_gcc_DESC=
PACKAGE_gcc-hfi_DESC=with PSM2
PACKAGE_gcc-cuda-hfi_DESC=with CUDA PSM2

PREFIX = /usr/mpi/$(CC)/openmpi-$(subst -gcc,,$(PACKAGE_VERSION)-$(*))
TMP_DESTDIR = $(CURDIR)/debian/variants
DESTDIR=$(CURDIR)/debian/tmp

CC=$(CC_$(*))
CC_gcc = gcc
CC_gcc-hfi = gcc
CC_gcc-cuda-hfi = gcc

CFG_FLAGS_HFI = --with-psm2 \
	--with-psm \
	--with-libfabric \
	--with-verbs
CFG_FLAGS_NO_CUDA = --enable-cuda=no \
	--enable-opencl=no
CFG_FLAGS_gcc = --with-psm=no \
	--with-psm2=no \
	--enable-mca-no-build=mtl-psm \
	--with-verbs \
	$(CFG_FLAGS_NO_CUDA)
CFG_FLAGS_gcc-hfi = $(CFG_FLAGS_HFI) \
	$(CFG_FLAGS_NO_CUDA)
CFG_FLAGS_gcc-cuda-hfi = $(CFG_FLAGS_HFI) \
	--enable-cuda \
	--with-cuda=$(CUDA_HOME)

MPI_THREADS = 

CFLAGS += -O3
CXXFLAGS += -O3

MPISELNAME = $(subst -,_,$(PACKAGE_NAME))-$(PACKAGE_VERSION)

%:
	dh $@ --parallel --with autoreconf

.PHONY: prep
prep: debian/control \
	$(foreach v,$(VARIANTS),debian/openmpi-$(v).docs) \
	$(foreach v,$(VARIANTS),debian/openmpi-$(v).install) \
	$(foreach v,$(VARIANTS),debian/openmpi-$(v).lintian-overrides) \
	$(foreach v,$(VARIANTS),debian/openmpi-$(v).postinst) \
	$(foreach v,$(VARIANTS),debian/openmpi-$(v).prerm)

debian/control: debian/control.in $(foreach v,$(VARIANTS),debian/control-$(v))
	cat $^ > $@

debian/control-%:
	sed "s/@PACKAGE_NAME@/$(PACKAGE_NAME)/g;s/@PACKAGE_DESC@/$(PACKAGE_$(*)_DESC)/g" \
		debian/control-pkg.in > $@

debian/openmpi-%.docs: debian/openmpi.docs.in
	cp $< $@

debian/openmpi-%.install: debian/openmpi.install.in
	sed "s#@PREFIX@#$(PREFIX:/%=%)#g" $< > $@

debian/openmpi-%.lintian-overrides: debian/openmpi.lintian-overrides.in
	sed "s/@PACKAGE_NAME@/$(PACKAGE_NAME)/g" $< > $@

debian/openmpi-%.postinst: debian/openmpi.postinst.in
	sed "s#@MPISELNAME@#$(MPISELNAME)#g;s#@MPIHOME@#$(PREFIX)#g" $< > $@

debian/openmpi-%.prerm: debian/openmpi.prerm.in
	sed "s/@MPISELNAME@/$(MPISELNAME)/g" $< > $@

.PHONY: override_dh_autoreconf
override_dh_autoreconf:

.PHONY: override_dh_auto_configure
override_dh_auto_configure:

.PHONY: override_dh_auto_build
override_dh_auto_build: $(foreach v,$(VARIANTS),build-$(v).stamp)

.NOTPARALLEL: build-%.stamp
build-%.stamp:
	if [ -f Makefile ] ; then $(MAKE) clean ; fi
	$(RM) mpivars.sh mpivars.csh
	./autogen.pl --force
	dh_auto_configure -- \
		--prefix=$(PREFIX) \
		$(CFG_FLAGS_$(*)) \
		$(MPI_THREADS) \
		--disable-dependency-tracking \
		--disable-silent-rules \
		--disable-oshmem \
		--enable-mpi-cxx \
		--enable-mpirun-prefix-by-default \
		--with-devel-headers \
		--sysconfdir=$(PREFIX)/etc \
		--libdir=$(PREFIX)/lib \
		--includedir=$(PREFIX)/include
	dh_auto_build
	dh_auto_test
	dh_prep
	$(MAKE) -j6 DESTDIR=$(TMP_DESTDIR) install
	find $(TMP_DESTDIR)/$(PREFIX) -name '*.mod' -exec chmod 0644 {} \;
	find $(TMP_DESTDIR)/$(PREFIX)/share/man -type f -exec gzip -n {} \;
	sed "s#@MPIHOME@#$(PREFIX)#g" debian/mpivars.sh.in > mpivars.sh
	sed "s#@MPIHOME@#$(PREFIX)#g" debian/mpivars.csh.in > mpivars.csh
	install -m 0644 mpivars.sh $(TMP_DESTDIR)/$(PREFIX)/bin
	install -m 0644 mpivars.csh $(TMP_DESTDIR)/$(PREFIX)/bin
	touch $@

.PHONY: override_dh_auto_install
override_dh_auto_install:
	cp -aT $(TMP_DESTDIR) $(DESTDIR)

.PHONY: override_dh_auto_test
override_dh_auto_test:

