## Building openmpi

The build for openmpi outputs a version of the packages configured for
use of different channels. The package name indicates the configuration
options, so packaging templates and a build script are used.

To build the packages...

  $ gbp buildpackage

Define ENABLE_CUDA=1 to build openmpi-gcc-hfi-cuda, ENABLE_VERBS=1 to build openmpi-gcc.

## Upgrading the upstream source for openmpi

Obtain the SRPM for openmpi and install it:

  rpm -i openmpi-VERSION.src.rpm

This will extract the SRPM contents to:

  $HOME/rpmbuild/SPEC - contains openmpi.spec
  $HOME/rpmbuild/SOURCES - contains the source tarball

Look at openmpi.spec for the version and release information. The 
upstream version to use with debian is VERSION-RELEASE, with underscores
converted to dashes.

For example, if version is 3.10.0_693 and release is 1514, the upstream 
version would be 3.10.0-693-1514.

The upstream source is upgraded via the gbp tool. The repository's upstream
and pristine-tar branches need to be tracked locally.

  $ git checkout pristine-tar
  $ git checkout upstream
  $ git checkout master   # or the branch to merge into

Next, clean the working directory and use gbp to import the upstream code:

  $ git clean -xfd .
  $ git checkout .
  $ gbp import-orig ~/rpmbuild/SOURCES/openmpi-VERSION.tar.bz2

If the branch to merge into is not master, add the flag --debian-branch= with 
the branch to merge into.

When prompted by gbp for the upstream version, enter the upstream version
that was determined earlier in this process.

After the merge, copy the following to debian/rhel and commit to git:

  $HOME/rpmbuild/SPEC/openmpi.spec

Once everything is merged and committed, execute the following from the 
development branch:

  $ git push
  $ git push --tags

